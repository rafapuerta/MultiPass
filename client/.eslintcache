[{"H:\\MultiPass\\client\\src\\index.js":"1","H:\\MultiPass\\client\\src\\reportWebVitals.js":"2","H:\\MultiPass\\client\\src\\App.js":"3","H:\\MultiPass\\client\\src\\components\\index.js":"4","H:\\MultiPass\\client\\src\\components\\main\\index.js":"5","H:\\MultiPass\\client\\src\\components\\noticias\\index.js":"6","H:\\MultiPass\\client\\src\\components\\main\\Conciertos.js":"7","H:\\MultiPass\\client\\src\\components\\main\\Inicio.js":"8","H:\\MultiPass\\client\\src\\components\\main\\Registro.js":"9","H:\\MultiPass\\client\\src\\components\\noticias\\Noticias.js":"10","H:\\MultiPass\\client\\src\\components\\noticias\\Post.js":"11","H:\\MultiPass\\client\\src\\components\\main\\Usuario.js":"12","H:\\MultiPass\\client\\src\\components\\frame\\index.js":"13","H:\\MultiPass\\client\\src\\components\\frame\\Cabecera.js":"14","H:\\MultiPass\\client\\src\\components\\frame\\Footer.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":2142,"mtime":1611187070119,"results":"19","hashOfConfig":"17"},{"size":229,"mtime":1611192150445,"results":"20","hashOfConfig":"17"},{"size":188,"mtime":1611052271061,"results":"21","hashOfConfig":"17"},{"size":89,"mtime":1611052339152,"results":"22","hashOfConfig":"17"},{"size":8476,"mtime":1611188833451,"results":"23","hashOfConfig":"17"},{"size":6398,"mtime":1611052572090,"results":"24","hashOfConfig":"17"},{"size":7897,"mtime":1611052155947,"results":"25","hashOfConfig":"17"},{"size":2024,"mtime":1611191854850,"results":"26","hashOfConfig":"17"},{"size":2717,"mtime":1611195074755,"results":"27","hashOfConfig":"17"},{"size":13646,"mtime":1611052561491,"results":"28","hashOfConfig":"17"},{"size":93,"mtime":1611100865790,"results":"29","hashOfConfig":"17"},{"size":5175,"mtime":1611100976365,"results":"30","hashOfConfig":"17"},{"size":560,"mtime":1611100814477,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"4ltqb8",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\MultiPass\\client\\src\\index.js",[],["64","65"],"H:\\MultiPass\\client\\src\\reportWebVitals.js",[],"H:\\MultiPass\\client\\src\\App.js",[],"H:\\MultiPass\\client\\src\\components\\index.js",[],"H:\\MultiPass\\client\\src\\components\\main\\index.js",[],"H:\\MultiPass\\client\\src\\components\\noticias\\index.js",[],"H:\\MultiPass\\client\\src\\components\\main\\Conciertos.js",["66"],"H:\\MultiPass\\client\\src\\components\\main\\Inicio.js",[],"H:\\MultiPass\\client\\src\\components\\main\\Registro.js",[],"H:\\MultiPass\\client\\src\\components\\noticias\\Noticias.js",["67"],"H:\\MultiPass\\client\\src\\components\\noticias\\Post.js",["68"],"H:\\MultiPass\\client\\src\\components\\main\\Usuario.js",["69"],"import {\r\n  Container,\r\n  Row,\r\n  CardColumns,\r\n  Card,\r\n  Button,\r\n  Jumbotron,\r\n  Col,\r\n  Form,\r\n  Alert,\r\n  Tooltip,\r\n  Image,\r\n  OverlayTrigger,\r\n  ProgressBar,\r\n} from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Link, Redirect, Route } from \"react-router-dom\";\r\n\r\n//-----MEDIA------\r\n\r\nimport gold from \"../../img/microphone_gold.png\";\r\nimport silver from \"../../img/microphone_silver.png\";\r\nimport bronze from \"../../img/microphone_bronze.png\";\r\n\r\n//---------------\r\n\r\nconst { DateTime } = require(\"luxon\");\r\nconst QRCode = require(\"qrcode.react\");\r\n\r\nexport default function Usuario({ sesion, setSesion, usuario, setUsuario, logout}) {\r\n  let peso = 0;\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [refresh, setRefresh] = useState([])\r\n\r\n  useEffect(()=>{\r\n      fetch(\"/user/info\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.error) {\r\n            console.log({ status: \"Denegado\"});\r\n            setSesion(false)\r\n          } else {\r\n            setUsuario(data);\r\n            setSesion(true);\r\n          }\r\n        });\r\n  },[refresh])\r\n\r\n  const eliminarEntrada = (e) => {\r\n    fetch(\"/entradas/eliminar\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ id: e.target.value, email: usuario.email }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(function (datos) {\r\n        setRefresh([])\r\n        setFeedback(<Alert variant=\"success\">{datos.mensaje}</Alert>);\r\n      });\r\n  };\r\n\r\n  const DatosUsuario = () => {\r\n    const categoriaImagen = (categoria) => {\r\n      switch (categoria) {\r\n        case 5:\r\n          return <Image style={{ width: 30 }} src={bronze} />;\r\n        case 10:\r\n          return <Image style={{ width: 30 }} src={silver} />;\r\n        case 15:\r\n          return <Image style={{ width: 30 }} src={gold} />;\r\n        default:\r\n          return <p>FALLO!</p>;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <Row>\r\n          <Card style={{ width: \"100%\" }}>\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <strong>{usuario.email}</strong>\r\n                </Col>\r\n                <Col>\r\n                  <Link to=\"/\">\r\n                    <Button size=\"sm\" variant=\"warning\" onClick={logout}>\r\n                      Cerrar sesión\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n                <Col>\r\n                  <Link to=\"/usuario/editar\">\r\n                    <Button size=\"sm\" variant=\"warning\">\r\n                      Editar datos\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Card.Text>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <strong>Nombre:</strong> {usuario.nombre}{\" \"}\r\n                    {usuario.apellido1} {usuario.apellido2}\r\n                  </Col>\r\n                  <Col sm={4}>\r\n                    <strong>Dni:</strong> {usuario.dni}\r\n                  </Col>\r\n                  <Col sm={4}>\r\n                    <strong>Teléfono:</strong> {usuario.telf}\r\n                  </Col>\r\n                </Row>\r\n                <Row>⠀</Row>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <strong>Categoría:</strong>{\" \"}\r\n                    {categoriaImagen(usuario.categoria)}\r\n                  </Col>\r\n                  <Col sm={8}>\r\n                    <strong>Pase:</strong> {peso}/{usuario.categoria}{\" \"}\r\n                    <ProgressBar\r\n                      variant=\"warning\"\r\n                      now={(100 * peso) / usuario.categoria}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Card.Text>\r\n\r\n              <Route exact path=\"/usuario/editar\">\r\n                <EditarUsuario />\r\n              </Route>\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n      </BrowserRouter>\r\n    );\r\n  };\r\n\r\n  const EditarUsuario = () => {\r\n    const [nombre, setNombre] = useState(usuario.nombre);\r\n    const [apellido1, setApellido1] = useState(usuario.apellido1);\r\n    const [apellido2, setApellido2] = useState(usuario.apellido2);\r\n    const [dni, setDni] = useState(usuario.dni);\r\n    const [telf, setTelf] = useState(usuario.telf);\r\n    const [categoria, setCategoria] = useState(usuario.categoria);\r\n\r\n    const editar = () => {\r\n      fetch(\"/user/edit\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          nombre: nombre,\r\n          apellido1: apellido1,\r\n          apellido2: apellido2,\r\n          dni: dni,\r\n          telf: telf,\r\n          email: usuario.email,\r\n          categoria: categoria,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (!data.error) {\r\n            setFeedback(<Alert variant=\"success\">{data.mensaje}</Alert>)\r\n            setRefresh([])\r\n          } else {\r\n            setFeedback(<Alert variant=\"danger\">{data.mensaje}</Alert>);\r\n          }\r\n        });\r\n    };\r\n    \r\n\r\n    return (\r\n      <Container style={{ backgroundColor: \"#EEEEEE\", padding: 10 }}>\r\n        <Form>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridName\">\r\n              <Form.Label>Nombre</Form.Label>\r\n              <Form.Control\r\n                value={nombre}\r\n                onChange={(e) => {\r\n                  setNombre(e.target.value);\r\n                }}\r\n                type=\"input\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGrid1Apellido\">\r\n              <Form.Label>1º Apellido</Form.Label>\r\n              <Form.Control\r\n                value={apellido1}\r\n                onChange={(e) => {\r\n                  setApellido1(e.target.value);\r\n                }}\r\n                type=\"input\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGrid2Apellido\">\r\n              <Form.Label>2º Apellido</Form.Label>\r\n              <Form.Control\r\n                value={apellido2}\r\n                onChange={(e) => {\r\n                  setApellido2(e.target.value);\r\n                }}\r\n                type=\"input\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridTelf\">\r\n              <Form.Label>Telefono:</Form.Label>\r\n              <Form.Control\r\n                value={telf}\r\n                onChange={(e) => {\r\n                  setTelf(e.target.value);\r\n                }}\r\n                type=\"input\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGridDNI\">\r\n              <Form.Label>DNI</Form.Label>\r\n              <Form.Control\r\n                value={dni}\r\n                onChange={(e) => {\r\n                  setDni(e.target.value);\r\n                }}\r\n                type=\"input\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <fieldset>\r\n              <Form.Group as={Row}>\r\n                <Form.Label as=\"legend\" column sm={4}>\r\n                  Nivel de suscripción:\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    label=\"Gold - 49.99€ / mes\"\r\n                    name=\"formHorizontalRadios\"\r\n                    id=\"tierGroupie\"\r\n                    value={15}\r\n                    onClick={(e) => {\r\n                      setCategoria(e.target.value);\r\n                    }}\r\n                    defaultChecked={usuario.categoria === 15}\r\n                  />\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    label=\"Silver - 29.99€ / mes\"\r\n                    name=\"formHorizontalRadios\"\r\n                    id=\"tierFan\"\r\n                    value={10}\r\n                    onClick={(e) => {\r\n                      setCategoria(e.target.value);\r\n                    }}\r\n                    defaultChecked={usuario.categoria === 10}\r\n                    />\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    label=\"Bronze - 19.99€ / mes\"\r\n                    name=\"formHorizontalRadios\"\r\n                    id=\"tierAficionado\"\r\n                    value={5}\r\n                    onClick={(e) => {\r\n                      setCategoria(e.target.value);\r\n                    }}\r\n                    defaultChecked={usuario.categoria === 5}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            </fieldset>\r\n          </Form.Row>\r\n          <Form.Row>\r\n          <Col sm={6}>\r\n          <Button size=\"sm\" onClick={editar} variant=\"success\">\r\n            Guardar\r\n          </Button>\r\n          </Col>\r\n          <Col sm={6}>\r\n          <Link to=\"/usuario\">\r\n            <Button size=\"sm\" variant=\"danger\">\r\n              Descartar\r\n            </Button>\r\n          </Link>\r\n          </Col>\r\n          </Form.Row>\r\n        </Form>\r\n        <Row>⠀</Row>\r\n        {feedback}\r\n      </Container>\r\n      \r\n    );\r\n  };\r\n\r\n  let entradasMostrar;\r\n  if (usuario.entradas) {\r\n    const tier = (categoria) => {\r\n      switch (categoria) {\r\n        case 5:\r\n          return <Tooltip id=\"tier-help\">Bronze</Tooltip>;\r\n        case 10:\r\n          return <Tooltip id=\"tier-help\">Silver</Tooltip>;\r\n        case 15:\r\n          return <Tooltip id=\"tier-help\">Gold</Tooltip>;\r\n        default:\r\n          return <p>FALLO!</p>;\r\n      }\r\n    };\r\n\r\n    const categoria = (categoria) => {\r\n      switch (categoria) {\r\n        case 5:\r\n          return <Image style={{ width: 30 }} src={bronze} />;\r\n        case 10:\r\n          return <Image style={{ width: 30 }} src={silver} />;\r\n        case 15:\r\n          return <Image style={{ width: 30 }} src={gold} />;\r\n        default:\r\n          return <p>FALLO!</p>;\r\n      }\r\n    };\r\n\r\n    entradasMostrar = usuario.entradas.map((entrada) => {\r\n      peso += entrada.peso;\r\n      var fecha = DateTime.fromISO(entrada.fecha);\r\n      var qr = JSON.stringify({\r\n        email: usuario.email,\r\n        dni: usuario.dni,\r\n        entrada: {\r\n          id: entrada.id,\r\n          artista: entrada.grupo,\r\n          entrada: entrada.numero,\r\n          lugar: entrada.sala,\r\n          fecha: entrada.fecha,\r\n        },\r\n      });\r\n\r\n      return (\r\n        <Card key={entrada.id}>\r\n          <Card.Img variant=\"top\" src={entrada.cartel} />\r\n          <Card.Body>\r\n            <Card.Title>\r\n              <Row\r\n                style={{\r\n                  backgroundColor: \"#EEEEEE\",\r\n                  borderRadius: 2,\r\n                  paddingTop: 5,\r\n                  paddingBottom: 5,\r\n                }}\r\n              >\r\n                <Col>{entrada.grupo}</Col>\r\n                <Col sm={2}>\r\n                  <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={tier(entrada.categoria)}\r\n                  >\r\n                    {categoria(entrada.categoria)}\r\n                  </OverlayTrigger>\r\n                </Col>\r\n              </Row>\r\n            </Card.Title>\r\n            <Card.Text>\r\n              <Row>\r\n                <Col>\r\n                  <strong>Fecha:</strong> <br />\r\n                  {`${fecha.day}/${fecha.month}/${fecha.year} @${fecha.hour}:${fecha.minute}`}\r\n                </Col>\r\n                <Col>\r\n                  <strong>Slots:</strong> <br />\r\n                  <h4>{entrada.peso}</h4>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <strong>Lugar:</strong> {entrada.sala}\r\n                </Col>\r\n                <Col>\r\n                  <strong>Entrada:</strong> <br />\r\n                  <h4 style={{ color: \"#FF9900\" }}>{entrada.numero}</h4>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={{ span: 4, offset: 3 }}>\r\n                  <QRCode value={qr} />\r\n                </Col>\r\n              </Row>\r\n            </Card.Text>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"warning\"\r\n              value={entrada.id}\r\n              onClick={eliminarEntrada}\r\n              block\r\n            >\r\n              Eliminar\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      );\r\n    });\r\n  }\r\n\r\n  if (!sesion) {\r\n    return <Redirect to=\"/\" />;\r\n  } else {\r\n    if (usuario.entradas !== undefined && usuario.entradas.length > 0) {\r\n      return (\r\n        <Container>\r\n          <Row>⠀</Row>\r\n          <DatosUsuario />\r\n          <Row>⠀</Row>\r\n          <Row>\r\n            <CardColumns style={{ paddingBottom: 60 }}>\r\n              {entradasMostrar}\r\n            </CardColumns>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container>\r\n          <Row>⠀</Row>\r\n          <DatosUsuario />\r\n          <Row>⠀</Row>\r\n          <Row>\r\n            <Jumbotron style={{ width: \"100%\" }}>\r\n              <Container>\r\n                <h1>No hay entradas en tu MultiPass</h1>\r\n                <p>\r\n                  ¡Date una vuelta por <Link to=\"/conciertos\">Conciertos</Link>{\" \"}\r\n                  y añade los que quieras!\r\n                </p>\r\n              </Container>\r\n            </Jumbotron>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n","H:\\MultiPass\\client\\src\\components\\frame\\index.js",[],"H:\\MultiPass\\client\\src\\components\\frame\\Cabecera.js",[],"H:\\MultiPass\\client\\src\\components\\frame\\Footer.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":64,"column":6,"nodeType":"76","endLine":64,"endColumn":15,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":11,"column":8,"nodeType":"80","messageId":"81","endLine":11,"endColumn":12},{"ruleId":"78","severity":1,"message":"82","line":8,"column":3,"nodeType":"80","messageId":"81","endLine":8,"endColumn":9},{"ruleId":"74","severity":1,"message":"83","line":47,"column":5,"nodeType":"76","endLine":47,"endColumn":14,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.sesion'. Either include it or remove the dependency array.","ArrayExpression",["87"],"no-unused-vars","'Post' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'setSesion' and 'setUsuario'. Either include them or remove the dependency array. If 'setSesion' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [props.sesion, refresh]",{"range":"93","text":"94"},"Update the dependencies array to be: [refresh, setSesion, setUsuario]",{"range":"95","text":"96"},[1501,1510],"[props.sesion, refresh]",[1142,1151],"[refresh, setSesion, setUsuario]"]